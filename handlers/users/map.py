import random
from aiogram import types
from PIL import Image, ImageDraw
from aiogram.types import InputFile

from filters import IsPrivate
from keyboards.default.default_field_keyboard import default_field
from utils.misc import rate_limit
from loader import dp


@rate_limit(limit=1)
@dp.message_handler(IsPrivate(), text="map")
async def show_map(message: types.Message):
    """
    –õ–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ 'map' –∏ –≥–µ–Ω–µ—Ä–∏—É—Ä–µ—Ç –ø–æ–ª–µ –∏ –æ—Ç—Å—Å—ã–ª–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    """
    """
    –°—Ç–∞–∞—Ä—ã–π –≤—ã–≤–æ–¥ –ø–æ–ª—è —Å –∫–æ—Ä–∞–±–ª—è–º–∏
    red_circle = 'üî¥'
    blue_circle = 'üîµ'
    cross = '‚ùå'
    n = 10
    out = '–ö–∞—Ä—Ç–∞ –≤—Ä–∞–≥–∞:\n'
    arr = generate_enemy_ships()
    for line in arr:
        for i in range(0, n):
            if line[i] >= 1:
                out += cross
            else:
                out += blue_circle
        out += '\n'
    """
    draw_field(message.chat.id)
    await message.answer_photo(InputFile(f'{message.chat.id}.jpg'), reply_markup=default_field)


def generate_enemy_ships():
    """
    –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∞—Å—Å–∏–≤–∞ –∫–æ—Ä–∞–±–ª–µ–π
    """
    enemy_ships = [[]]
    ships_list = [1, 1, 1, 1, 2, 2, 2, 3, 3, 4]
    sum_all_ships = sum(ships_list)
    sum_all_enemy = 0
    quantity_x, quantity_y = 10, 10
    while sum_all_enemy != sum_all_ships:
        # –æ–±–Ω—É–ª—è—é –º–∞—Å–∏–≤ –∫–æ—Ä–∞–±–ª—ñ–≤
        enemy_ships = [[0 for _ in range(quantity_x + 1)] for _ in
                       range(quantity_y + 1)]  # +1 –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó –ª—ñ–Ω—ñ–π —Å–ø—Ä–∞–≤–∞ —ñ –∑–Ω–∏–∑—É,
        # —â–æ–± —É—Å–ø—ñ—à–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∞–±–ª—ñ–≤
        for i in range(0, 10):
            length = ships_list[i]
            horizont_vertikal = random.randrange(1, 3)  # 1- –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–µ  2 - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–µ

            coordinate_on_x = random.randrange(0, quantity_x)
            if coordinate_on_x + length > quantity_x:
                coordinate_on_x = coordinate_on_x - length

            coordinate_on_y = random.randrange(0, quantity_y)
            if coordinate_on_y + length > quantity_y:
                coordinate_on_y = coordinate_on_y - length

            if horizont_vertikal == 1:
                if coordinate_on_x + length <= quantity_x:
                    for j in range(0, length):
                        try:
                            check_near_ships = enemy_ships[coordinate_on_y][coordinate_on_x - 1] + \
                                               enemy_ships[coordinate_on_y][coordinate_on_x + j] + \
                                               enemy_ships[coordinate_on_y][coordinate_on_x + j + 1] + \
                                               enemy_ships[coordinate_on_y + 1][coordinate_on_x + j + 1] + \
                                               enemy_ships[coordinate_on_y - 1][coordinate_on_x + j + 1] + \
                                               enemy_ships[coordinate_on_y + 1][coordinate_on_x + j] + \
                                               enemy_ships[coordinate_on_y - 1][coordinate_on_x + j] + \
                                               enemy_ships[coordinate_on_y + 1][coordinate_on_x - j - 1] + \
                                               enemy_ships[coordinate_on_y - 1][coordinate_on_x - j - 1]
                            if check_near_ships == 0:  # –∑–∞–ø–∏—Å—É—é –≤ —Ç–æ–º—É –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ –Ω–µ–º–∞—î –Ω—ñ—á–æ–≥–æ –ø–æ—Ä—è–¥
                                enemy_ships[coordinate_on_y][coordinate_on_x + j] = i + 1  # –∑–∞–ø–∏—Å—É—é –Ω–æ–º–µ—Ä –∫–æ—Ä–∞–±–ª—è
                        except Exception:
                            pass
            if horizont_vertikal == 2:
                if coordinate_on_y + length <= quantity_y:
                    for j in range(0, length):
                        try:
                            check_near_ships = enemy_ships[coordinate_on_y - 1][coordinate_on_x] + \
                                               enemy_ships[coordinate_on_y + j][coordinate_on_x] + \
                                               enemy_ships[coordinate_on_y + j + 1][coordinate_on_x] + \
                                               enemy_ships[coordinate_on_y + j + 1][coordinate_on_x + 1] + \
                                               enemy_ships[coordinate_on_y + j + 1][coordinate_on_x - 1] + \
                                               enemy_ships[coordinate_on_y - j - 1][coordinate_on_x + 1] + \
                                               enemy_ships[coordinate_on_y - j - 1][coordinate_on_x - 1] + \
                                               enemy_ships[coordinate_on_y + j][coordinate_on_x + 1] + \
                                               enemy_ships[coordinate_on_y + j][coordinate_on_x - 1]
                            if check_near_ships == 0:
                                enemy_ships[coordinate_on_y + j][coordinate_on_x] = i + 1
                        except Exception:
                            pass
        # –¥–µ–ª–∞–µ–º –ø–æ–¥—Å—á–µ—Ç –∫–æ—Ä–∞–±–ª–µ–π
        sum_all_enemy = 0
        for i in range(0, quantity_x):
            for j in range(0, quantity_y):
                if enemy_ships[j][i] > 0:
                    sum_all_enemy = sum_all_enemy + 1
    return enemy_ships


def draw_field(chat_id):
    """
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—è 500—Ö500
    """
    photo_height = 500
    photo_width = 500
    quantity = 10
    step = photo_height // quantity
    img = Image.new('RGB', (photo_width, photo_height), 'blue')
    draw = ImageDraw.Draw(img)
    arr = generate_enemy_ships()
    for i in range(0, quantity):
        for j in range(0, quantity):
            if arr[i][j] > 0:
                # –∑–∞—Ä–∏—Å–æ–≤—É–µ–º –∫–ª–µ—Ç–æ—á–∫–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–æ—Ä–∞–±–ª–∏
                draw.rectangle((j * step + 2, i * step + 2, j * step + 48, i * step + 48), fill='white')
    for i in range(0, quantity):
        # —Ä–∏—Å—É–µ–º –ø–æ–ª–µ —á–µ—Ä–Ω—ã–º–∏ –ª–∏–Ω–∏—è–º–∏
        draw.line((step * i, 0, step * i, photo_height), fill='black', width=2)
        draw.line((0, step * i, photo_width, step * i), fill='black', width=2)
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏ id –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    img.save(f'{chat_id}.jpg', quality=95)


def change_image(i, j, chat_id):
    """
    –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä–∞—à–∏–≤–∞–µ—Ç –∫–ª–µ—Ç–æ—á–∫—É –∫—É–¥–∞ —Å—Ç—Ä–µ–ª—è–ª–∏
    """
    step = 50
    img = Image.open(f'{chat_id}.jpg')
    draw = ImageDraw.Draw(img)
    # 48 –ø–æ—Ç–æ–º—É —á—Ç–æ –±—ã –Ω–µ –∑–∞–ª–∞–∑–∏–ª–æ –Ω–∞ —á–µ—Ä–Ω—ã–µ –ª–∏–Ω–∏–∏
    draw.rectangle((j * step + 2, i * step + 2, j * step + 48, i * step + 48), fill='red')
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏ id –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    img.save(f'{chat_id}.jpg', quality=95)
